# Phase 3: Backend API Deployment with MPP Configuration
# Multi-Project Platform (MPP) supports both single-namespace and multi-namespace modes
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-api
  labels:
    app: backend-api
    app.kubernetes.io/name: backend-api
    app.kubernetes.io/part-of: vteam
    app.kubernetes.io/component: api
spec:
  replicas: 1  # Single pod for RWO PVC
  selector:
    matchLabels:
      app: backend-api
  template:
    metadata:
      labels:
        app: backend-api
    spec:
      serviceAccountName: backend-api
      containers:
      - name: backend-api
        image: quay.io/ambient_code/vteam_backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: PORT
          value: "8080"
        - name: AGENTS_DIR
          value: "/app/agents"
        # MPP Configuration: Controls whether to operate in single-namespace mode
        # When true, all resources are created in the operator's namespace
        # When false, each project gets its own namespace
        - name: SINGLE_NAMESPACE_MODE
          value: "false"
        # MPP Configuration: Storage class for PersistentVolumeClaims
        # Used when creating workspace PVCs for agentic sessions
        - name: STORAGE_CLASS
          value: "gp3-csi"

        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:

---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  labels:
    app: backend-api
    app.kubernetes.io/name: backend-api
    app.kubernetes.io/part-of: vteam
spec:
  selector:
    app: backend-api
  ports:
  - port: 8080
    targetPort: http
    protocol: TCP
    name: http
  type: ClusterIP
