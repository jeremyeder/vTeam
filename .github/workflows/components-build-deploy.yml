name: Build and Push Component Docker Images

on:
  push:
    branches: [main]
  pull_request_target:
    branches: [main]
  workflow_dispatch:

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      backend: ${{ steps.filter.outputs.backend }}
      operator: ${{ steps.filter.outputs.operator }}
      claude-runner: ${{ steps.filter.outputs.claude-runner }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Check for component changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            frontend:
              - 'components/frontend/**'
            backend:
              - 'components/backend/**'
            operator:
              - 'components/operator/**'
            claude-runner:
              - 'components/runners/**'

  build-and-push:
    runs-on: ubuntu-latest
    needs: detect-changes
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    strategy:
      matrix:
        component:
          - name: frontend
            context: ./components/frontend
            image: quay.io/ambient_code/vteam_frontend
            dockerfile: ./components/frontend/Dockerfile
            changed: ${{ needs.detect-changes.outputs.frontend }}
          - name: backend
            context: ./components/backend
            image: quay.io/ambient_code/vteam_backend
            dockerfile: ./components/backend/Dockerfile
            changed: ${{ needs.detect-changes.outputs.backend }}
          - name: operator
            context: ./components/operator
            image: quay.io/ambient_code/vteam_operator
            dockerfile: ./components/operator/Dockerfile
            changed: ${{ needs.detect-changes.outputs.operator }}
          - name: claude-code-runner
            context: ./components/runners
            image: quay.io/ambient_code/vteam_claude_runner
            dockerfile: ./components/runners/claude-code-runner/Dockerfile
            changed: ${{ needs.detect-changes.outputs.claude-runner }}
    steps:
      - name: Checkout code
        if: matrix.component.changed == 'true' || github.event_name == 'workflow_dispatch'
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Set up Docker Buildx
        if: matrix.component.changed == 'true' || github.event_name == 'workflow_dispatch'
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Log in to Quay.io
        if: matrix.component.changed == 'true' || github.event_name == 'workflow_dispatch'
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Log in to Red Hat Container Registry
        if: matrix.component.changed == 'true' || github.event_name == 'workflow_dispatch'
        uses: docker/login-action@v3
        with:
          registry: registry.redhat.io
          username: ${{ secrets.REDHAT_USERNAME }}
          password: ${{ secrets.REDHAT_PASSWORD }}

      - name: Build and push ${{ matrix.component.name }} image only for merge into main
        if: (matrix.component.changed == 'true' || github.event_name == 'workflow_dispatch') && github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.component.context }}
          file: ${{ matrix.component.dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ matrix.component.image }}:latest
            ${{ matrix.component.image }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build ${{ matrix.component.name }} image for pull requests but don't push
        if: (matrix.component.changed == 'true' || github.event_name == 'workflow_dispatch') && github.event_name == 'pull_request_target'
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.component.context }}
          file: ${{ matrix.component.dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: false
          tags: ${{ matrix.component.image }}:pr-${{ github.event.pull_request.number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  patch-yaml:
    runs-on: ubuntu-latest
    needs: [detect-changes, build-and-push]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && (needs.detect-changes.outputs.frontend == 'true' || needs.detect-changes.outputs.backend == 'true' || needs.detect-changes.outputs.operator == 'true' || needs.detect-changes.outputs.claude-runner == 'true')
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install oc
        uses: redhat-actions/oc-installer@v1
        with:
          oc_version: 'latest'

      - name: Log in to OpenShift Cluster
        run: |
          oc login ${{ secrets.OPENSHIFT_SERVER }} --token=${{ secrets.OPENSHIFT_TOKEN }} --insecure-skip-tls-verify

      - name: Deploy updated components to OpenShift
        run: |
          oc apply -k components/manifests

  deploy-to-openshift:
    runs-on: ubuntu-latest
    needs: [detect-changes, build-and-push, patch-yaml]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && (needs.detect-changes.outputs.frontend == 'true' || needs.detect-changes.outputs.backend == 'true' || needs.detect-changes.outputs.operator == 'true' || needs.detect-changes.outputs.claude-runner == 'true')
    strategy:
      matrix:
        component:
          - name: frontend
            context: ./components/frontend
            image: quay.io/ambient_code/vteam_frontend
            dockerfile: ./components/frontend/Dockerfile
            changed: ${{ needs.detect-changes.outputs.frontend }}
          - name: backend
            context: ./components/backend
            image: quay.io/ambient_code/vteam_backend
            dockerfile: ./components/backend/Dockerfile
            changed: ${{ needs.detect-changes.outputs.backend }}
          - name: operator
            context: ./components/operator
            image: quay.io/ambient_code/vteam_operator
            dockerfile: ./components/operator/Dockerfile
            changed: ${{ needs.detect-changes.outputs.operator }}
          - name: claude-code-runner
            context: ./components/runners
            image: quay.io/ambient_code/vteam_claude_runner
            dockerfile: ./components/runners/claude-code-runner/Dockerfile
            changed: ${{ needs.detect-changes.outputs.claude-runner }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install oc
        uses: redhat-actions/oc-installer@v1
        with:
          oc_version: 'latest'

      - name: Log in to OpenShift Cluster
        run: |
          oc login ${{ secrets.OPENSHIFT_SERVER }} --token=${{ secrets.OPENSHIFT_TOKEN }} --insecure-skip-tls-verify

      - name: Update frontend if changed
        if: matrix.component.name == 'frontend' && matrix.component.changed == 'true'
        run: |
          oc patch deployment frontend -n ambient-code --patch "{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"vteam-frontend\",\"image\":\"quay.io/ambient_code/vteam_frontend:${{ github.sha }}\"}]}}}}"
      - name: Update backend if changed
        if: matrix.component.name == 'backend' && matrix.component.changed == 'true'
        run: |
          oc patch deployment backend-api -n ambient-code --patch "{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"vteam-backend\",\"image\":\"quay.io/ambient_code/vteam_backend:${{ github.sha }}\"}]}}}}"
      - name: Update operator if changed
        if: matrix.component.name == 'operator' && matrix.component.changed == 'true'
        run: |
          oc patch deployment agentic-operator -n ambient-code --patch "{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"vteam-operator\",\"image\":\"quay.io/ambient_code/vteam_operator:${{ github.sha }}\"}]}}}}"

  rollout-changes:
    runs-on: ubuntu-latest
    needs: [detect-changes, build-and-push, patch-yaml, deploy-to-openshift]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && (needs.detect-changes.outputs.frontend == 'true' || needs.detect-changes.outputs.backend == 'true' || needs.detect-changes.outputs.operator == 'true' || needs.detect-changes.outputs.claude-runner == 'true')
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install oc
        uses: redhat-actions/oc-installer@v1
        with:
          oc_version: 'latest'

      - name: Log in to OpenShift Cluster
        run: |
          oc login ${{ secrets.OPENSHIFT_SERVER }} --token=${{ secrets.OPENSHIFT_TOKEN }} --insecure-skip-tls-verify

      - name: force restart of pods to pick up changes
        run: oc delete po --all -n ambient-code
